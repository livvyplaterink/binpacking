#this file executes the heuristic: orders the items and bins, places the items in the bins, and then performs a postprocessing step (currently the postprocessing step is executed 3 times in order to double check the cost but the extra postprocessing steps have thus far not changed the cost)

import random
from sorting import *

#randomly choosing the number of items from a list 
item_number_list = [500, 600, 700, 800, 900]
item_number = random.choice(item_number_list)
print(item_number)

#randomly assigning volumes valued between 1 and 20 to the items
item_volume = {}
for i in range(item_number):
    item_volume["i" + str(i+1)] = random.randint(1, 40)
print(item_volume)

#choosing the number of bins (number of items / 2) 
bin_number = int(item_number / 2)

#randomly assigning volumes valued between 20 and 60 and costs valued between 1 and 10 to the bins 
bin_volume = {}
bin_cost = {}
for i in range(bin_number):
    bin_volume["b" + str(i+1)] = random.randint(50, 80)
    bin_cost["b" + str(i+1)] = random.randint(1, 20)
print(bin_volume)
print(bin_cost)


#item_volume = {'i1': 8, 'i2': 20, 'i3': 12, 'i4': 8, 'i5': 1, 'i6': 3, 'i7': 20, 'i8': 15, 'i9': 17, 'i10': 2, 'i11': 6, 'i12': 2, 'i13': 18, 'i14': 9, 'i15': 13, 'i16': 17, 'i17': 14, 'i18': 10, 'i19': 10, 'i20': 7, 'i21': 17, 'i22': 8, 'i23': 20, 'i24': 17, 'i25': 6, 'i26': 13, 'i27': 6, 'i28': 18, 'i29': 9, 'i30': 4, 'i31': 11, 'i32': 9, 'i33': 10, 'i34': 11, 'i35': 11, 'i36': 6, 'i37': 17, 'i38': 5, 'i39': 13, 'i40': 2, 'i41': 7, 'i42': 5, 'i43': 14, 'i44': 8, 'i45': 2, 'i46': 4, 'i47': 7, 'i48': 11, 'i49': 10, 'i50': 10, 'i51': 14, 'i52': 20, 'i53': 16, 'i54': 19, 'i55': 10, 'i56': 18, 'i57': 4, 'i58': 14, 'i59': 6, 'i60': 17, 'i61': 2, 'i62': 6, 'i63': 13, 'i64': 8, 'i65': 11, 'i66': 5, 'i67': 14, 'i68': 7, 'i69': 14, 'i70': 17, 'i71': 2, 'i72': 3, 'i73': 5, 'i74': 10, 'i75': 20, 'i76': 4, 'i77': 2, 'i78': 20, 'i79': 9, 'i80': 4, 'i81': 6, 'i82': 4, 'i83': 6, 'i84': 4, 'i85': 12, 'i86': 20, 'i87': 8, 'i88': 10, 'i89': 7, 'i90': 1, 'i91': 1, 'i92': 11, 'i93': 14, 'i94': 8, 'i95': 15, 'i96': 18, 'i97': 3, 'i98': 3, 'i99': 9, 'i100': 18, 'i101': 8, 'i102': 8, 'i103': 18, 'i104': 20, 'i105': 14, 'i106': 8, 'i107': 8, 'i108': 19, 'i109': 11, 'i110': 12, 'i111': 8, 'i112': 19, 'i113': 6, 'i114': 19, 'i115': 20, 'i116': 20, 'i117': 11, 'i118': 16, 'i119': 8, 'i120': 7, 'i121': 3, 'i122': 13, 'i123': 3, 'i124': 2, 'i125': 5, 'i126': 11, 'i127': 1, 'i128': 3, 'i129': 10, 'i130': 7, 'i131': 15, 'i132': 5, 'i133': 15, 'i134': 1, 'i135': 6, 'i136': 6, 'i137': 9, 'i138': 20, 'i139': 10, 'i140': 3, 'i141': 5, 'i142': 8, 'i143': 17, 'i144': 11, 'i145': 1, 'i146': 10, 'i147': 20, 'i148': 8, 'i149': 18, 'i150': 14, 'i151': 19, 'i152': 6, 'i153': 19, 'i154': 20, 'i155': 2, 'i156': 11, 'i157': 14, 'i158': 8, 'i159': 8, 'i160': 7, 'i161': 19, 'i162': 4, 'i163': 3, 'i164': 6, 'i165': 14, 'i166': 11, 'i167': 17, 'i168': 16, 'i169': 10, 'i170': 9, 'i171': 10, 'i172': 6, 'i173': 12, 'i174': 8, 'i175': 11, 'i176': 15, 'i177': 15, 'i178': 10, 'i179': 18, 'i180': 4, 'i181': 1, 'i182': 6, 'i183': 19, 'i184': 15, 'i185': 4, 'i186': 1, 'i187': 9, 'i188': 17, 'i189': 10, 'i190': 11, 'i191': 11, 'i192': 8, 'i193': 7, 'i194': 19, 'i195': 17, 'i196': 6, 'i197': 12, 'i198': 17, 'i199': 2, 'i200': 20, 'i201': 13, 'i202': 5, 'i203': 9, 'i204': 11, 'i205': 3, 'i206': 16, 'i207': 19, 'i208': 10, 'i209': 7, 'i210': 20, 'i211': 16, 'i212': 14, 'i213': 14, 'i214': 9, 'i215': 6, 'i216': 10, 'i217': 12, 'i218': 7, 'i219': 7, 'i220': 5, 'i221': 7, 'i222': 6, 'i223': 1, 'i224': 8, 'i225': 5, 'i226': 2, 'i227': 8, 'i228': 13, 'i229': 6, 'i230': 6, 'i231': 10, 'i232': 19, 'i233': 13, 'i234': 14, 'i235': 4, 'i236': 4, 'i237': 15, 'i238': 17, 'i239': 15, 'i240': 13, 'i241': 11, 'i242': 13, 'i243': 19, 'i244': 14, 'i245': 16, 'i246': 14, 'i247': 4, 'i248': 9, 'i249': 8, 'i250': 3, 'i251': 8, 'i252': 19, 'i253': 15, 'i254': 1, 'i255': 13, 'i256': 16, 'i257': 10, 'i258': 7, 'i259': 17, 'i260': 10, 'i261': 13, 'i262': 2, 'i263': 20, 'i264': 20, 'i265': 17, 'i266': 6, 'i267': 6, 'i268': 6, 'i269': 9, 'i270': 15, 'i271': 19, 'i272': 19, 'i273': 10, 'i274': 10, 'i275': 16, 'i276': 17, 'i277': 15, 'i278': 9, 'i279': 19, 'i280': 10, 'i281': 12, 'i282': 7, 'i283': 8, 'i284': 6, 'i285': 7, 'i286': 4, 'i287': 8, 'i288': 10, 'i289': 17, 'i290': 4, 'i291': 15, 'i292': 16, 'i293': 8, 'i294': 4, 'i295': 2, 'i296': 20, 'i297': 13, 'i298': 18, 'i299': 4, 'i300': 3, 'i301': 10, 'i302': 8, 'i303': 6, 'i304': 5, 'i305': 13, 'i306': 6, 'i307': 20, 'i308': 2, 'i309': 17, 'i310': 1, 'i311': 7, 'i312': 14, 'i313': 3, 'i314': 20, 'i315': 5, 'i316': 17, 'i317': 13, 'i318': 9, 'i319': 5, 'i320': 1, 'i321': 12, 'i322': 13, 'i323': 11, 'i324': 10, 'i325': 6, 'i326': 11, 'i327': 1, 'i328': 2, 'i329': 14, 'i330': 4, 'i331': 11, 'i332': 2, 'i333': 17, 'i334': 8, 'i335': 20, 'i336': 20, 'i337': 9, 'i338': 4, 'i339': 20, 'i340': 9, 'i341': 7, 'i342': 19, 'i343': 18, 'i344': 9, 'i345': 11, 'i346': 7, 'i347': 12, 'i348': 12, 'i349': 17, 'i350': 14, 'i351': 20, 'i352': 11, 'i353': 7, 'i354': 5, 'i355': 11, 'i356': 10, 'i357': 16, 'i358': 15, 'i359': 4, 'i360': 17, 'i361': 20, 'i362': 16, 'i363': 2, 'i364': 17, 'i365': 11, 'i366': 12, 'i367': 10, 'i368': 3, 'i369': 3, 'i370': 2, 'i371': 13, 'i372': 14, 'i373': 1, 'i374': 2, 'i375': 18, 'i376': 10, 'i377': 11, 'i378': 19, 'i379': 12, 'i380': 4, 'i381': 9, 'i382': 9, 'i383': 8, 'i384': 1, 'i385': 15, 'i386': 10, 'i387': 9, 'i388': 13, 'i389': 14, 'i390': 14, 'i391': 16, 'i392': 6, 'i393': 9, 'i394': 12, 'i395': 9, 'i396': 16, 'i397': 18, 'i398': 9, 'i399': 5, 'i400': 20, 'i401': 4, 'i402': 19, 'i403': 6, 'i404': 11, 'i405': 9, 'i406': 20, 'i407': 14, 'i408': 16, 'i409': 9, 'i410': 1, 'i411': 17, 'i412': 8, 'i413': 11, 'i414': 16, 'i415': 4, 'i416': 9, 'i417': 12, 'i418': 9, 'i419': 17, 'i420': 7, 'i421': 6, 'i422': 16, 'i423': 4, 'i424': 17, 'i425': 17, 'i426': 6, 'i427': 14, 'i428': 1, 'i429': 19, 'i430': 13, 'i431': 7, 'i432': 3, 'i433': 13, 'i434': 19, 'i435': 20, 'i436': 2, 'i437': 6, 'i438': 5, 'i439': 8, 'i440': 20, 'i441': 14, 'i442': 19, 'i443': 17, 'i444': 16, 'i445': 17, 'i446': 18, 'i447': 8, 'i448': 1, 'i449': 18, 'i450': 8, 'i451': 3, 'i452': 8, 'i453': 9, 'i454': 19, 'i455': 8, 'i456': 6, 'i457': 12, 'i458': 8, 'i459': 9, 'i460': 10, 'i461': 18, 'i462': 12, 'i463': 7, 'i464': 17, 'i465': 16, 'i466': 9, 'i467': 9, 'i468': 15, 'i469': 16, 'i470': 4, 'i471': 10, 'i472': 4, 'i473': 2, 'i474': 4, 'i475': 14, 'i476': 10, 'i477': 12, 'i478': 7, 'i479': 9, 'i480': 11, 'i481': 2, 'i482': 20, 'i483': 12, 'i484': 15, 'i485': 17, 'i486': 16, 'i487': 1, 'i488': 10, 'i489': 5, 'i490': 2, 'i491': 15, 'i492': 16, 'i493': 14, 'i494': 4, 'i495': 9, 'i496': 17, 'i497': 9, 'i498': 16, 'i499': 17, 'i500': 16, 'i501': 5, 'i502': 2, 'i503': 13, 'i504': 2, 'i505': 10, 'i506': 11, 'i507': 10, 'i508': 18, 'i509': 16, 'i510': 4, 'i511': 16, 'i512': 17, 'i513': 1, 'i514': 2, 'i515': 13, 'i516': 2, 'i517': 15, 'i518': 11, 'i519': 15, 'i520': 4, 'i521': 12, 'i522': 3, 'i523': 6, 'i524': 19, 'i525': 8, 'i526': 1, 'i527': 3, 'i528': 18, 'i529': 11, 'i530': 11, 'i531': 15, 'i532': 11, 'i533': 2, 'i534': 5, 'i535': 3, 'i536': 12, 'i537': 8, 'i538': 11, 'i539': 7, 'i540': 19, 'i541': 12, 'i542': 11, 'i543': 18, 'i544': 3, 'i545': 7, 'i546': 13, 'i547': 8, 'i548': 10, 'i549': 5, 'i550': 12, 'i551': 13, 'i552': 18, 'i553': 7, 'i554': 3, 'i555': 14, 'i556': 3, 'i557': 5, 'i558': 20, 'i559': 20, 'i560': 7, 'i561': 9, 'i562': 8, 'i563': 19, 'i564': 5, 'i565': 15, 'i566': 19, 'i567': 3, 'i568': 15, 'i569': 8, 'i570': 14, 'i571': 10, 'i572': 10, 'i573': 13, 'i574': 12, 'i575': 5, 'i576': 12, 'i577': 10, 'i578': 13, 'i579': 5, 'i580': 17, 'i581': 9, 'i582': 15, 'i583': 11, 'i584': 10, 'i585': 10, 'i586': 10, 'i587': 7, 'i588': 1, 'i589': 5, 'i590': 1, 'i591': 4, 'i592': 3, 'i593': 14, 'i594': 17, 'i595': 1, 'i596': 13, 'i597': 16, 'i598': 15, 'i599': 3, 'i600': 19}

#bin_volume = {'b1': 42, 'b2': 41, 'b3': 23, 'b4': 40, 'b5': 27, 'b6': 56, 'b7': 53, 'b8': 59, 'b9': 44, 'b10': 20, 'b11': 42, 'b12': 41, 'b13': 22, 'b14': 34, 'b15': 26, 'b16': 52, 'b17': 36, 'b18': 20, 'b19': 38, 'b20': 36, 'b21': 40, 'b22': 57, 'b23': 25, 'b24': 56, 'b25': 58, 'b26': 58, 'b27': 45, 'b28': 51, 'b29': 54, 'b30': 44, 'b31': 41, 'b32': 39, 'b33': 46, 'b34': 38, 'b35': 40, 'b36': 36, 'b37': 26, 'b38': 56, 'b39': 34, 'b40': 53, 'b41': 41, 'b42': 52, 'b43': 31, 'b44': 51, 'b45': 53, 'b46': 60, 'b47': 51, 'b48': 42, 'b49': 51, 'b50': 49, 'b51': 59, 'b52': 58, 'b53': 60, 'b54': 36, 'b55': 31, 'b56': 58, 'b57': 51, 'b58': 46, 'b59': 29, 'b60': 44, 'b61': 56, 'b62': 37, 'b63': 56, 'b64': 20, 'b65': 55, 'b66': 37, 'b67': 49, 'b68': 35, 'b69': 39, 'b70': 43, 'b71': 60, 'b72': 25, 'b73': 44, 'b74': 31, 'b75': 20, 'b76': 54, 'b77': 52, 'b78': 53, 'b79': 56, 'b80': 55, 'b81': 31, 'b82': 40, 'b83': 53, 'b84': 20, 'b85': 56, 'b86': 25, 'b87': 48, 'b88': 25, 'b89': 56, 'b90': 27, 'b91': 47, 'b92': 38, 'b93': 32, 'b94': 58, 'b95': 34, 'b96': 22, 'b97': 22, 'b98': 43, 'b99': 36, 'b100': 49, 'b101': 42, 'b102': 30, 'b103': 20, 'b104': 42, 'b105': 56, 'b106': 37, 'b107': 52, 'b108': 25, 'b109': 25, 'b110': 34, 'b111': 38, 'b112': 44, 'b113': 41, 'b114': 44, 'b115': 35, 'b116': 41, 'b117': 29, 'b118': 52, 'b119': 32, 'b120': 25, 'b121': 49, 'b122': 27, 'b123': 52, 'b124': 22, 'b125': 30, 'b126': 57, 'b127': 42, 'b128': 23, 'b129': 21, 'b130': 24, 'b131': 26, 'b132': 27, 'b133': 23, 'b134': 43, 'b135': 34, 'b136': 52, 'b137': 59, 'b138': 37, 'b139': 50, 'b140': 36, 'b141': 40, 'b142': 46, 'b143': 60, 'b144': 25, 'b145': 58, 'b146': 34, 'b147': 42, 'b148': 49, 'b149': 39, 'b150': 38, 'b151': 46, 'b152': 39, 'b153': 40, 'b154': 32, 'b155': 56, 'b156': 26, 'b157': 53, 'b158': 52, 'b159': 27, 'b160': 37, 'b161': 39, 'b162': 41, 'b163': 60, 'b164': 46, 'b165': 31, 'b166': 55, 'b167': 54, 'b168': 38, 'b169': 36, 'b170': 36, 'b171': 51, 'b172': 35, 'b173': 27, 'b174': 56, 'b175': 60, 'b176': 38, 'b177': 21, 'b178': 53, 'b179': 44, 'b180': 28, 'b181': 40, 'b182': 30, 'b183': 60, 'b184': 56, 'b185': 45, 'b186': 28, 'b187': 33, 'b188': 36, 'b189': 36, 'b190': 21, 'b191': 44, 'b192': 43, 'b193': 27, 'b194': 32, 'b195': 53, 'b196': 57, 'b197': 45, 'b198': 60, 'b199': 58, 'b200': 46, 'b201': 53, 'b202': 48, 'b203': 56, 'b204': 41, 'b205': 42, 'b206': 35, 'b207': 35, 'b208': 60, 'b209': 50, 'b210': 20, 'b211': 45, 'b212': 46, 'b213': 30, 'b214': 36, 'b215': 37, 'b216': 32, 'b217': 59, 'b218': 60, 'b219': 47, 'b220': 56, 'b221': 43, 'b222': 52, 'b223': 43, 'b224': 54, 'b225': 25, 'b226': 21, 'b227': 41, 'b228': 22, 'b229': 30, 'b230': 36, 'b231': 50, 'b232': 46, 'b233': 39, 'b234': 58, 'b235': 35, 'b236': 40, 'b237': 58, 'b238': 51, 'b239': 48, 'b240': 44, 'b241': 56, 'b242': 28, 'b243': 34, 'b244': 30, 'b245': 34, 'b246': 40, 'b247': 58, 'b248': 27, 'b249': 59, 'b250': 34, 'b251': 43, 'b252': 22, 'b253': 34, 'b254': 39, 'b255': 51, 'b256': 36, 'b257': 56, 'b258': 22, 'b259': 60, 'b260': 35, 'b261': 43, 'b262': 25, 'b263': 37, 'b264': 46, 'b265': 49, 'b266': 55, 'b267': 54, 'b268': 32, 'b269': 45, 'b270': 37, 'b271': 20, 'b272': 35, 'b273': 52, 'b274': 49, 'b275': 56, 'b276': 48, 'b277': 27, 'b278': 30, 'b279': 41, 'b280': 24, 'b281': 35, 'b282': 26, 'b283': 58, 'b284': 26, 'b285': 50, 'b286': 23, 'b287': 54, 'b288': 43, 'b289': 48, 'b290': 36, 'b291': 46, 'b292': 57, 'b293': 58, 'b294': 32, 'b295': 55, 'b296': 35, 'b297': 27, 'b298': 55, 'b299': 20, 'b300': 48}

#bin_cost = {'b1': 1, 'b2': 3, 'b3': 1, 'b4': 8, 'b5': 3, 'b6': 5, 'b7': 6, 'b8': 5, 'b9': 10, 'b10': 10, 'b11': 4, 'b12': 5, 'b13': 9, 'b14': 9, 'b15': 2, 'b16': 5, 'b17': 10, 'b18': 7, 'b19': 1, 'b20': 5, 'b21': 4, 'b22': 2, 'b23': 4, 'b24': 1, 'b25': 10, 'b26': 2, 'b27': 4, 'b28': 10, 'b29': 7, 'b30': 5, 'b31': 10, 'b32': 9, 'b33': 7, 'b34': 10, 'b35': 2, 'b36': 9, 'b37': 2, 'b38': 9, 'b39': 1, 'b40': 1, 'b41': 8, 'b42': 6, 'b43': 4, 'b44': 3, 'b45': 1, 'b46': 7, 'b47': 5, 'b48': 3, 'b49': 7, 'b50': 7, 'b51': 3, 'b52': 5, 'b53': 6, 'b54': 1, 'b55': 1, 'b56': 9, 'b57': 7, 'b58': 8, 'b59': 8, 'b60': 1, 'b61': 3, 'b62': 4, 'b63': 8, 'b64': 8, 'b65': 9, 'b66': 3, 'b67': 8, 'b68': 7, 'b69': 5, 'b70': 2, 'b71': 5, 'b72': 2, 'b73': 4, 'b74': 8, 'b75': 7, 'b76': 2, 'b77': 5, 'b78': 8, 'b79': 2, 'b80': 1, 'b81': 1, 'b82': 6, 'b83': 7, 'b84': 1, 'b85': 8, 'b86': 7, 'b87': 2, 'b88': 3, 'b89': 10, 'b90': 9, 'b91': 10, 'b92': 1, 'b93': 6, 'b94': 4, 'b95': 10, 'b96': 4, 'b97': 6, 'b98': 9, 'b99': 1, 'b100': 4, 'b101': 1, 'b102': 7, 'b103': 5, 'b104': 1, 'b105': 7, 'b106': 6, 'b107': 5, 'b108': 4, 'b109': 7, 'b110': 9, 'b111': 1, 'b112': 4, 'b113': 2, 'b114': 8, 'b115': 3, 'b116': 2, 'b117': 6, 'b118': 1, 'b119': 10, 'b120': 4, 'b121': 7, 'b122': 2, 'b123': 8, 'b124': 4, 'b125': 4, 'b126': 5, 'b127': 8, 'b128': 8, 'b129': 3, 'b130': 5, 'b131': 5, 'b132': 7, 'b133': 4, 'b134': 7, 'b135': 10, 'b136': 6, 'b137': 9, 'b138': 10, 'b139': 7, 'b140': 3, 'b141': 3, 'b142': 7, 'b143': 6, 'b144': 3, 'b145': 10, 'b146': 4, 'b147': 7, 'b148': 7, 'b149': 9, 'b150': 8, 'b151': 1, 'b152': 7, 'b153': 4, 'b154': 3, 'b155': 5, 'b156': 10, 'b157': 5, 'b158': 3, 'b159': 3, 'b160': 8, 'b161': 4, 'b162': 10, 'b163': 9, 'b164': 2, 'b165': 6, 'b166': 1, 'b167': 5, 'b168': 5, 'b169': 8, 'b170': 6, 'b171': 10, 'b172': 8, 'b173': 10, 'b174': 3, 'b175': 2, 'b176': 1, 'b177': 8, 'b178': 7, 'b179': 2, 'b180': 5, 'b181': 1, 'b182': 7, 'b183': 2, 'b184': 10, 'b185': 3, 'b186': 7, 'b187': 10, 'b188': 9, 'b189': 7, 'b190': 2, 'b191': 10, 'b192': 2, 'b193': 6, 'b194': 2, 'b195': 6, 'b196': 2, 'b197': 4, 'b198': 5, 'b199': 4, 'b200': 8, 'b201': 1, 'b202': 5, 'b203': 8, 'b204': 7, 'b205': 9, 'b206': 9, 'b207': 3, 'b208': 10, 'b209': 2, 'b210': 5, 'b211': 8, 'b212': 5, 'b213': 7, 'b214': 9, 'b215': 5, 'b216': 1, 'b217': 10, 'b218': 3, 'b219': 3, 'b220': 5, 'b221': 8, 'b222': 8, 'b223': 10, 'b224': 4, 'b225': 7, 'b226': 1, 'b227': 4, 'b228': 4, 'b229': 8, 'b230': 1, 'b231': 9, 'b232': 4, 'b233': 9, 'b234': 5, 'b235': 8, 'b236': 7, 'b237': 7, 'b238': 1, 'b239': 3, 'b240': 4, 'b241': 8, 'b242': 10, 'b243': 5, 'b244': 7, 'b245': 7, 'b246': 8, 'b247': 5, 'b248': 3, 'b249': 8, 'b250': 3, 'b251': 10, 'b252': 3, 'b253': 7, 'b254': 8, 'b255': 4, 'b256': 7, 'b257': 8, 'b258': 2, 'b259': 9, 'b260': 1, 'b261': 10, 'b262': 4, 'b263': 8, 'b264': 4, 'b265': 7, 'b266': 10, 'b267': 8, 'b268': 7, 'b269': 5, 'b270': 3, 'b271': 4, 'b272': 10, 'b273': 5, 'b274': 7, 'b275': 10, 'b276': 7, 'b277': 3, 'b278': 1, 'b279': 6, 'b280': 3, 'b281': 5, 'b282': 6, 'b283': 9, 'b284': 7, 'b285': 4, 'b286': 6, 'b287': 7, 'b288': 9, 'b289': 10, 'b290': 5, 'b291': 3, 'b292': 3, 'b293': 1, 'b294': 4, 'b295': 1, 'b296': 9, 'b297': 7, 'b298': 7, 'b299': 5, 'b300': 2} 

item_volume = { "i1" : 50, "i2" : 60, "i3" : 30, "i4" : 20, "i5" : 25, "i6" : 10, "i7" : 30, "i8" : 50, "i9" : 14}
bin_volume = {"b1" : 60, "b2" : 80, "b3" : 100, "b4" : 120, "b5" : 120, "b6" : 80, "b7" : 100}
bin_cost = {"b1" : 3, "b2" : 4, "b3" : 3, "b4" : 8, "b5" : 6, "b6" : 5.5, "b7" : 4}

#item_volume = {'i1': 14, 'i2': 22, 'i3': 1, 'i4': 7, 'i5': 24, 'i6': 39, 'i7': 15, 'i8': 20, 'i9': 5, 'i10': 1, 'i11': 23, 'i12': 40, 'i13': 29, 'i14': 39, 'i15': 1, 'i16': 29, 'i17': 21, 'i18': 9, 'i19': 16, 'i20': 39, 'i21': 23, 'i22': 37, 'i23': 2, 'i24': 31, 'i25': 19, 'i26': 12, 'i27': 16, 'i28': 20, 'i29': 33, 'i30': 40, 'i31': 38, 'i32': 17, 'i33': 7, 'i34': 13, 'i35': 4, 'i36': 22, 'i37': 30, 'i38': 22, 'i39': 18, 'i40': 14, 'i41': 23, 'i42': 21, 'i43': 31, 'i44': 21, 'i45': 33, 'i46': 28, 'i47': 2, 'i48': 36, 'i49': 8, 'i50': 21, 'i51': 39, 'i52': 34, 'i53': 23, 'i54': 37, 'i55': 31, 'i56': 6, 'i57': 39, 'i58': 25, 'i59': 25, 'i60': 19, 'i61': 2, 'i62': 21, 'i63': 39, 'i64': 6, 'i65': 25, 'i66': 26, 'i67': 31, 'i68': 30, 'i69': 15, 'i70': 22, 'i71': 8, 'i72': 26, 'i73': 29, 'i74': 18, 'i75': 34, 'i76': 19, 'i77': 39, 'i78': 24, 'i79': 31, 'i80': 18, 'i81': 39, 'i82': 17, 'i83': 32, 'i84': 1, 'i85': 34, 'i86': 15, 'i87': 15, 'i88': 18, 'i89': 4, 'i90': 22, 'i91': 4, 'i92': 3, 'i93': 6, 'i94': 17, 'i95': 29, 'i96': 38, 'i97': 31, 'i98': 16, 'i99': 26, 'i100': 5, 'i101': 13, 'i102': 29, 'i103': 35, 'i104': 34, 'i105': 38, 'i106': 5, 'i107': 20, 'i108': 37, 'i109': 6, 'i110': 13, 'i111': 32, 'i112': 21, 'i113': 30, 'i114': 1, 'i115': 31, 'i116': 28, 'i117': 26, 'i118': 25, 'i119': 25, 'i120': 38, 'i121': 33, 'i122': 19, 'i123': 26, 'i124': 2, 'i125': 20, 'i126': 39, 'i127': 13, 'i128': 21, 'i129': 26, 'i130': 26, 'i131': 13, 'i132': 38, 'i133': 17, 'i134': 33, 'i135': 17, 'i136': 25, 'i137': 30, 'i138': 10, 'i139': 14, 'i140': 29, 'i141': 21, 'i142': 26, 'i143': 13, 'i144': 12, 'i145': 4, 'i146': 40, 'i147': 3, 'i148': 18, 'i149': 16, 'i150': 26, 'i151': 22, 'i152': 33, 'i153': 1, 'i154': 16, 'i155': 21, 'i156': 7, 'i157': 17, 'i158': 28, 'i159': 25, 'i160': 17, 'i161': 26, 'i162': 11, 'i163': 9, 'i164': 39, 'i165': 9, 'i166': 32, 'i167': 24, 'i168': 11, 'i169': 21, 'i170': 37, 'i171': 37, 'i172': 3, 'i173': 11, 'i174': 29, 'i175': 19, 'i176': 36, 'i177': 19, 'i178': 16, 'i179': 38, 'i180': 10, 'i181': 23, 'i182': 28, 'i183': 8, 'i184': 29, 'i185': 7, 'i186': 15, 'i187': 35, 'i188': 12, 'i189': 10, 'i190': 37, 'i191': 1, 'i192': 5, 'i193': 35, 'i194': 30, 'i195': 27, 'i196': 26, 'i197': 25, 'i198': 21, 'i199': 36, 'i200': 38, 'i201': 1, 'i202': 10, 'i203': 5, 'i204': 6, 'i205': 28, 'i206': 33, 'i207': 32, 'i208': 27, 'i209': 26, 'i210': 28, 'i211': 16, 'i212': 17, 'i213': 3, 'i214': 27, 'i215': 5, 'i216': 1, 'i217': 19, 'i218': 8, 'i219': 2, 'i220': 36, 'i221': 20, 'i222': 3, 'i223': 38, 'i224': 14, 'i225': 11, 'i226': 6, 'i227': 37, 'i228': 1, 'i229': 21, 'i230': 30, 'i231': 27, 'i232': 24, 'i233': 8, 'i234': 4, 'i235': 30, 'i236': 34, 'i237': 3, 'i238': 6, 'i239': 17, 'i240': 18, 'i241': 28, 'i242': 3, 'i243': 26, 'i244': 18, 'i245': 35, 'i246': 10, 'i247': 11, 'i248': 15, 'i249': 23, 'i250': 9, 'i251': 32, 'i252': 28, 'i253': 29, 'i254': 32, 'i255': 11, 'i256': 14, 'i257': 8, 'i258': 13, 'i259': 4, 'i260': 33, 'i261': 26, 'i262': 21, 'i263': 9, 'i264': 38, 'i265': 8, 'i266': 18, 'i267': 30, 'i268': 23, 'i269': 33, 'i270': 12, 'i271': 3, 'i272': 39, 'i273': 40, 'i274': 38, 'i275': 11, 'i276': 26, 'i277': 20, 'i278': 29, 'i279': 12, 'i280': 6, 'i281': 14, 'i282': 25, 'i283': 25, 'i284': 26, 'i285': 24, 'i286': 10, 'i287': 7, 'i288': 37, 'i289': 30, 'i290': 17, 'i291': 7, 'i292': 33, 'i293': 25, 'i294': 29, 'i295': 7, 'i296': 37, 'i297': 25, 'i298': 34, 'i299': 14, 'i300': 23, 'i301': 36, 'i302': 16, 'i303': 38, 'i304': 29, 'i305': 35, 'i306': 39, 'i307': 32, 'i308': 20, 'i309': 8, 'i310': 6, 'i311': 8, 'i312': 31, 'i313': 9, 'i314': 26, 'i315': 26, 'i316': 1, 'i317': 22, 'i318': 35, 'i319': 3, 'i320': 27, 'i321': 7, 'i322': 28, 'i323': 28, 'i324': 20, 'i325': 18, 'i326': 22, 'i327': 7, 'i328': 36, 'i329': 22, 'i330': 3, 'i331': 39, 'i332': 4, 'i333': 7, 'i334': 17, 'i335': 34, 'i336': 8, 'i337': 32, 'i338': 25, 'i339': 28, 'i340': 21, 'i341': 31, 'i342': 24, 'i343': 16, 'i344': 7, 'i345': 33, 'i346': 31, 'i347': 5, 'i348': 6, 'i349': 4, 'i350': 1, 'i351': 29, 'i352': 10, 'i353': 34, 'i354': 14, 'i355': 20, 'i356': 16, 'i357': 2, 'i358': 21, 'i359': 3, 'i360': 15, 'i361': 40, 'i362': 25, 'i363': 27, 'i364': 27, 'i365': 3, 'i366': 38, 'i367': 6, 'i368': 23, 'i369': 25, 'i370': 25, 'i371': 17, 'i372': 33, 'i373': 24, 'i374': 2, 'i375': 9, 'i376': 5, 'i377': 33, 'i378': 11, 'i379': 31, 'i380': 7, 'i381': 19, 'i382': 13, 'i383': 10, 'i384': 17, 'i385': 22, 'i386': 31, 'i387': 30, 'i388': 21, 'i389': 31, 'i390': 38, 'i391': 9, 'i392': 34, 'i393': 2, 'i394': 19, 'i395': 1, 'i396': 10, 'i397': 5, 'i398': 33, 'i399': 13, 'i400': 16, 'i401': 20, 'i402': 27, 'i403': 25, 'i404': 15, 'i405': 28, 'i406': 15, 'i407': 13, 'i408': 8, 'i409': 17, 'i410': 21, 'i411': 20, 'i412': 21, 'i413': 26, 'i414': 32, 'i415': 14, 'i416': 20, 'i417': 11, 'i418': 7, 'i419': 28, 'i420': 31, 'i421': 26, 'i422': 21, 'i423': 29, 'i424': 39, 'i425': 34, 'i426': 24, 'i427': 26, 'i428': 17, 'i429': 24, 'i430': 2, 'i431': 24, 'i432': 19, 'i433': 27, 'i434': 36, 'i435': 20, 'i436': 1, 'i437': 2, 'i438': 34, 'i439': 3, 'i440': 33, 'i441': 8, 'i442': 23, 'i443': 21, 'i444': 3, 'i445': 25, 'i446': 36, 'i447': 33, 'i448': 6, 'i449': 27, 'i450': 25, 'i451': 33, 'i452': 35, 'i453': 9, 'i454': 17, 'i455': 13, 'i456': 37, 'i457': 19, 'i458': 3, 'i459': 2, 'i460': 39, 'i461': 28, 'i462': 5, 'i463': 35, 'i464': 5, 'i465': 5, 'i466': 29, 'i467': 31, 'i468': 13, 'i469': 34, 'i470': 5, 'i471': 20, 'i472': 38, 'i473': 26, 'i474': 4, 'i475': 36, 'i476': 6, 'i477': 7, 'i478': 40, 'i479': 37, 'i480': 29, 'i481': 30, 'i482': 26, 'i483': 7, 'i484': 5, 'i485': 10, 'i486': 35, 'i487': 23, 'i488': 15, 'i489': 21, 'i490': 38, 'i491': 17, 'i492': 40, 'i493': 5, 'i494': 25, 'i495': 15, 'i496': 34, 'i497': 27, 'i498': 40, 'i499': 7, 'i500': 1, 'i501': 2, 'i502': 8, 'i503': 25, 'i504': 40, 'i505': 16, 'i506': 15, 'i507': 26, 'i508': 11, 'i509': 2, 'i510': 38, 'i511': 2, 'i512': 1, 'i513': 14, 'i514': 37, 'i515': 39, 'i516': 8, 'i517': 12, 'i518': 18, 'i519': 36, 'i520': 11, 'i521': 35, 'i522': 26, 'i523': 30, 'i524': 2, 'i525': 25, 'i526': 10, 'i527': 15, 'i528': 26, 'i529': 19, 'i530': 34, 'i531': 32, 'i532': 38, 'i533': 8, 'i534': 10, 'i535': 16, 'i536': 27, 'i537': 2, 'i538': 21, 'i539': 7, 'i540': 38, 'i541': 34, 'i542': 19, 'i543': 30, 'i544': 21, 'i545': 10, 'i546': 26, 'i547': 8, 'i548': 31, 'i549': 20, 'i550': 1, 'i551': 1, 'i552': 7, 'i553': 11, 'i554': 34, 'i555': 38, 'i556': 28, 'i557': 29, 'i558': 6, 'i559': 29, 'i560': 8, 'i561': 34, 'i562': 29, 'i563': 38, 'i564': 25, 'i565': 39, 'i566': 32, 'i567': 20, 'i568': 30, 'i569': 19, 'i570': 20, 'i571': 13, 'i572': 9, 'i573': 16, 'i574': 1, 'i575': 32, 'i576': 37, 'i577': 17, 'i578': 18, 'i579': 17, 'i580': 7, 'i581': 11, 'i582': 34, 'i583': 39, 'i584': 34, 'i585': 34, 'i586': 15, 'i587': 9, 'i588': 15, 'i589': 28, 'i590': 26, 'i591': 2, 'i592': 4, 'i593': 40, 'i594': 23, 'i595': 17, 'i596': 9, 'i597': 17, 'i598': 38, 'i599': 3, 'i600': 6}
#bin_volume = {'b1': 68, 'b2': 61, 'b3': 61, 'b4': 62, 'b5': 58, 'b6': 75, 'b7': 60, 'b8': 73, 'b9': 65, 'b10': 71, 'b11': 64, 'b12': 70, 'b13': 51, 'b14': 63, 'b15': 72, 'b16': 54, 'b17': 53, 'b18': 60, 'b19': 53, 'b20': 62, 'b21': 60, 'b22': 73, 'b23': 56, 'b24': 53, 'b25': 53, 'b26': 52, 'b27': 52, 'b28': 66, 'b29': 79, 'b30': 57, 'b31': 78, 'b32': 67, 'b33': 79, 'b34': 75, 'b35': 58, 'b36': 79, 'b37': 77, 'b38': 79, 'b39': 57, 'b40': 65, 'b41': 65, 'b42': 72, 'b43': 53, 'b44': 54, 'b45': 51, 'b46': 76, 'b47': 58, 'b48': 57, 'b49': 51, 'b50': 63, 'b51': 51, 'b52': 50, 'b53': 79, 'b54': 78, 'b55': 77, 'b56': 78, 'b57': 56, 'b58': 77, 'b59': 67, 'b60': 53, 'b61': 62, 'b62': 63, 'b63': 77, 'b64': 55, 'b65': 62, 'b66': 50, 'b67': 61, 'b68': 74, 'b69': 55, 'b70': 68, 'b71': 55, 'b72': 74, 'b73': 77, 'b74': 65, 'b75': 52, 'b76': 53, 'b77': 77, 'b78': 52, 'b79': 79, 'b80': 52, 'b81': 58, 'b82': 72, 'b83': 77, 'b84': 53, 'b85': 63, 'b86': 65, 'b87': 50, 'b88': 79, 'b89': 68, 'b90': 64, 'b91': 71, 'b92': 55, 'b93': 72, 'b94': 53, 'b95': 71, 'b96': 73, 'b97': 58, 'b98': 56, 'b99': 60, 'b100': 68, 'b101': 71, 'b102': 75, 'b103': 52, 'b104': 57, 'b105': 78, 'b106': 75, 'b107': 56, 'b108': 70, 'b109': 52, 'b110': 50, 'b111': 73, 'b112': 61, 'b113': 64, 'b114': 75, 'b115': 67, 'b116': 80, 'b117': 71, 'b118': 76, 'b119': 75, 'b120': 78, 'b121': 51, 'b122': 66, 'b123': 50, 'b124': 53, 'b125': 60, 'b126': 71, 'b127': 75, 'b128': 64, 'b129': 58, 'b130': 72, 'b131': 62, 'b132': 73, 'b133': 73, 'b134': 70, 'b135': 54, 'b136': 54, 'b137': 50, 'b138': 52, 'b139': 72, 'b140': 55, 'b141': 58, 'b142': 74, 'b143': 62, 'b144': 73, 'b145': 55, 'b146': 64, 'b147': 59, 'b148': 56, 'b149': 50, 'b150': 69, 'b151': 59, 'b152': 66, 'b153': 72, 'b154': 70, 'b155': 54, 'b156': 78, 'b157': 79, 'b158': 70, 'b159': 55, 'b160': 66, 'b161': 58, 'b162': 50, 'b163': 50, 'b164': 68, 'b165': 54, 'b166': 69, 'b167': 72, 'b168': 73, 'b169': 56, 'b170': 65, 'b171': 69, 'b172': 56, 'b173': 65, 'b174': 58, 'b175': 55, 'b176': 66, 'b177': 74, 'b178': 54, 'b179': 54, 'b180': 77, 'b181': 68, 'b182': 71, 'b183': 76, 'b184': 69, 'b185': 60, 'b186': 65, 'b187': 52, 'b188': 76, 'b189': 75, 'b190': 69, 'b191': 77, 'b192': 62, 'b193': 53, 'b194': 70, 'b195': 78, 'b196': 62, 'b197': 75, 'b198': 73, 'b199': 80, 'b200': 72, 'b201': 62, 'b202': 70, 'b203': 67, 'b204': 57, 'b205': 50, 'b206': 56, 'b207': 52, 'b208': 58, 'b209': 54, 'b210': 79, 'b211': 52, 'b212': 59, 'b213': 72, 'b214': 57, 'b215': 53, 'b216': 72, 'b217': 50, 'b218': 52, 'b219': 79, 'b220': 80, 'b221': 67, 'b222': 53, 'b223': 79, 'b224': 56, 'b225': 78, 'b226': 79, 'b227': 80, 'b228': 67, 'b229': 65, 'b230': 76, 'b231': 52, 'b232': 57, 'b233': 69, 'b234': 77, 'b235': 56, 'b236': 66, 'b237': 80, 'b238': 80, 'b239': 56, 'b240': 67, 'b241': 68, 'b242': 77, 'b243': 59, 'b244': 72, 'b245': 59, 'b246': 65, 'b247': 73, 'b248': 60, 'b249': 59, 'b250': 77, 'b251': 57, 'b252': 57, 'b253': 67, 'b254': 55, 'b255': 66, 'b256': 74, 'b257': 65, 'b258': 79, 'b259': 57, 'b260': 62, 'b261': 61, 'b262': 77, 'b263': 61, 'b264': 76, 'b265': 77, 'b266': 63, 'b267': 77, 'b268': 77, 'b269': 62, 'b270': 61, 'b271': 80, 'b272': 80, 'b273': 65, 'b274': 65, 'b275': 68, 'b276': 66, 'b277': 77, 'b278': 62, 'b279': 63, 'b280': 80, 'b281': 70, 'b282': 80, 'b283': 79, 'b284': 68, 'b285': 61, 'b286': 58, 'b287': 79, 'b288': 64, 'b289': 59, 'b290': 68, 'b291': 71, 'b292': 62, 'b293': 57, 'b294': 74, 'b295': 69, 'b296': 59, 'b297': 70, 'b298': 75, 'b299': 75, 'b300': 74}

#bin_cost = {'b1': 18, 'b2': 10, 'b3': 15, 'b4': 17, 'b5': 3, 'b6': 2, 'b7': 6, 'b8': 5, 'b9': 6, 'b10': 15, 'b11': 13, 'b12': 16, 'b13': 11, 'b14': 17, 'b15': 5, 'b16': 11, 'b17': 9, 'b18': 2, 'b19': 17, 'b20': 8, 'b21': 16, 'b22': 7, 'b23': 7, 'b24': 17, 'b25': 17, 'b26': 13, 'b27': 16, 'b28': 10, 'b29': 5, 'b30': 8, 'b31': 10, 'b32': 14, 'b33': 1, 'b34': 14, 'b35': 14, 'b36': 1, 'b37': 8, 'b38': 1, 'b39': 4, 'b40': 7, 'b41': 5, 'b42': 4, 'b43': 1, 'b44': 4, 'b45': 20, 'b46': 16, 'b47': 11, 'b48': 8, 'b49': 13, 'b50': 3, 'b51': 18, 'b52': 13, 'b53': 11, 'b54': 17, 'b55': 19, 'b56': 17, 'b57': 18, 'b58': 3, 'b59': 5, 'b60': 10, 'b61': 7, 'b62': 6, 'b63': 12, 'b64': 19, 'b65': 18, 'b66': 20, 'b67': 3, 'b68': 2, 'b69': 14, 'b70': 1, 'b71': 11, 'b72': 10, 'b73': 18, 'b74': 14, 'b75': 5, 'b76': 2, 'b77': 5, 'b78': 1, 'b79': 11, 'b80': 3, 'b81': 3, 'b82': 14, 'b83': 6, 'b84': 4, 'b85': 7, 'b86': 20, 'b87': 2, 'b88': 18, 'b89': 7, 'b90': 4, 'b91': 17, 'b92': 6, 'b93': 18, 'b94': 11, 'b95': 16, 'b96': 8, 'b97': 10, 'b98': 15, 'b99': 13, 'b100': 17, 'b101': 1, 'b102': 17, 'b103': 12, 'b104': 1, 'b105': 10, 'b106': 5, 'b107': 9, 'b108': 12, 'b109': 7, 'b110': 19, 'b111': 12, 'b112': 17, 'b113': 4, 'b114': 18, 'b115': 10, 'b116': 10, 'b117': 17, 'b118': 2, 'b119': 1, 'b120': 14, 'b121': 13, 'b122': 11, 'b123': 15, 'b124': 18, 'b125': 11, 'b126': 9, 'b127': 6, 'b128': 3, 'b129': 6, 'b130': 14, 'b131': 12, 'b132': 19, 'b133': 18, 'b134': 18, 'b135': 6, 'b136': 15, 'b137': 17, 'b138': 5, 'b139': 4, 'b140': 8, 'b141': 2, 'b142': 2, 'b143': 12, 'b144': 12, 'b145': 3, 'b146': 20, 'b147': 3, 'b148': 3, 'b149': 16, 'b150': 3, 'b151': 4, 'b152': 19, 'b153': 16, 'b154': 15, 'b155': 5, 'b156': 16, 'b157': 20, 'b158': 9, 'b159': 4, 'b160': 1, 'b161': 5, 'b162': 16, 'b163': 2, 'b164': 8, 'b165': 12, 'b166': 7, 'b167': 9, 'b168': 7, 'b169': 14, 'b170': 16, 'b171': 2, 'b172': 4, 'b173': 7, 'b174': 5, 'b175': 9, 'b176': 16, 'b177': 14, 'b178': 11, 'b179': 19, 'b180': 8, 'b181': 17, 'b182': 17, 'b183': 3, 'b184': 4, 'b185': 10, 'b186': 10, 'b187': 8, 'b188': 11, 'b189': 9, 'b190': 4, 'b191': 8, 'b192': 4, 'b193': 4, 'b194': 5, 'b195': 10, 'b196': 11, 'b197': 3, 'b198': 9, 'b199': 11, 'b200': 18, 'b201': 16, 'b202': 10, 'b203': 20, 'b204': 1, 'b205': 4, 'b206': 16, 'b207': 20, 'b208': 10, 'b209': 1, 'b210': 4, 'b211': 4, 'b212': 6, 'b213': 11, 'b214': 4, 'b215': 6, 'b216': 17, 'b217': 15, 'b218': 13, 'b219': 1, 'b220': 13, 'b221': 3, 'b222': 4, 'b223': 15, 'b224': 1, 'b225': 12, 'b226': 2, 'b227': 6, 'b228': 14, 'b229': 11, 'b230': 3, 'b231': 3, 'b232': 15, 'b233': 18, 'b234': 7, 'b235': 3, 'b236': 20, 'b237': 3, 'b238': 8, 'b239': 1, 'b240': 4, 'b241': 9, 'b242': 9, 'b243': 5, 'b244': 12, 'b245': 9, 'b246': 6, 'b247': 6, 'b248': 9, 'b249': 4, 'b250': 9, 'b251': 7, 'b252': 12, 'b253': 20, 'b254': 5, 'b255': 5, 'b256': 11, 'b257': 6, 'b258': 4, 'b259': 11, 'b260': 13, 'b261': 14, 'b262': 8, 'b263': 20, 'b264': 7, 'b265': 19, 'b266': 17, 'b267': 5, 'b268': 12, 'b269': 9, 'b270': 2, 'b271': 12, 'b272': 14, 'b273': 12, 'b274': 3, 'b275': 17, 'b276': 11, 'b277': 2, 'b278': 14, 'b279': 18, 'b280': 5, 'b281': 8, 'b282': 11, 'b283': 14, 'b284': 18, 'b285': 14, 'b286': 17, 'b287': 7, 'b288': 16, 'b289': 13, 'b290': 1, 'b291': 20, 'b292': 1, 'b293': 13, 'b294': 16, 'b295': 9, 'b296': 12, 'b297': 16, 'b298': 14, 'b299': 18, 'b300': 11} 

#item_volume = {'i1' : 50, 'i2' : 60, 'i3' : 30, 'i4' : 20, 'i5' : 60, 'i6' : 10, 'i7' : 15}
#bin_volume = {'b1' : 20, 'b2' : 70, 'b3' : 20, 'b4' : 70, 'b5' : 50, 'b6' : 20, 'b7' : 60, 'b8' : 200, 'b9' : 100, 'b10' : 30, 'b11' : 80}
#bin_cost = {'b1' : 4, 'b2' : 3, 'b3' : 6, 'b4' : 5, 'b5' : 4, 'b6' : 3, 'b7' : 9, 'b8' : 40, 'b9' : 20, 'b10' : 2, 'b11' : 7}

item_volume = {'i1': 829, 'i2': 347, 'i3': 631, 'i4': 13, 'i5': 697, 'i6': 734, 'i7': 625, 'i8': 50, 'i9': 701, 'i10': 429, 'i11': 100, 'i12': 772, 'i13': 945, 'i14': 53, 'i15': 746, 'i16': 778, 'i17': 997, 'i18': 548, 'i19': 697, 'i20': 278, 'i21': 987, 'i22': 878, 'i23': 282, 'i24': 941, 'i25': 286, 'i26': 932, 'i27': 997, 'i28': 582, 'i29': 473, 'i30': 578, 'i31': 630, 'i32': 867, 'i33': 128, 'i34': 11, 'i35': 997, 'i36': 619, 'i37': 190, 'i38': 255, 'i39': 21, 'i40': 917, 'i41': 892, 'i42': 296, 'i43': 585, 'i44': 446, 'i45': 835, 'i46': 36, 'i47': 339, 'i48': 638, 'i49': 213, 'i50': 134, 'i51': 476, 'i52': 213, 'i53': 227, 'i54': 885, 'i55': 330, 'i56': 938, 'i57': 602, 'i58': 795, 'i59': 701, 'i60': 650, 'i61': 983, 'i62': 448, 'i63': 543, 'i64': 166, 'i65': 350, 'i66': 320, 'i67': 665, 'i68': 977, 'i69': 103, 'i70': 952, 'i71': 405, 'i72': 50, 'i73': 721, 'i74': 112, 'i75': 737, 'i76': 867, 'i77': 395, 'i78': 600, 'i79': 69, 'i80': 125, 'i81': 602, 'i82': 985, 'i83': 601, 'i84': 107, 'i85': 626, 'i86': 19, 'i87': 558, 'i88': 378, 'i89': 646, 'i90': 643, 'i91': 949, 'i92': 687, 'i93': 123, 'i94': 522, 'i95': 389, 'i96': 335, 'i97': 452, 'i98': 761, 'i99': 776, 'i100': 889, 'i101': 414, 'i102': 473, 'i103': 984, 'i104': 31, 'i105': 435, 'i106': 855, 'i107': 181, 'i108': 5, 'i109': 652, 'i110': 183, 'i111': 440, 'i112': 471, 'i113': 993, 'i114': 768, 'i115': 880, 'i116': 894, 'i117': 323, 'i118': 756, 'i119': 935, 'i120': 34, 'i121': 655, 'i122': 439, 'i123': 489, 'i124': 113, 'i125': 120, 'i126': 890, 'i127': 698, 'i128': 217, 'i129': 506, 'i130': 263, 'i131': 320, 'i132': 537, 'i133': 82, 'i134': 540, 'i135': 598, 'i136': 757, 'i137': 729, 'i138': 768, 'i139': 121, 'i140': 583, 'i141': 4, 'i142': 72, 'i143': 187, 'i144': 632, 'i145': 27, 'i146': 684, 'i147': 84, 'i148': 121, 'i149': 667, 'i150': 111, 'i151': 964, 'i152': 748, 'i153': 809, 'i154': 290, 'i155': 714, 'i156': 572, 'i157': 371, 'i158': 293, 'i159': 477, 'i160': 512, 'i161': 126, 'i162': 808, 'i163': 598, 'i164': 70, 'i165': 580, 'i166': 428, 'i167': 935, 'i168': 787, 'i169': 517, 'i170': 827, 'i171': 244, 'i172': 857, 'i173': 659, 'i174': 486, 'i175': 379, 'i176': 700, 'i177': 856, 'i178': 244, 'i179': 336, 'i180': 486, 'i181': 213, 'i182': 600, 'i183': 535, 'i184': 951, 'i185': 411, 'i186': 708, 'i187': 45, 'i188': 55, 'i189': 868, 'i190': 87, 'i191': 799, 'i192': 35, 'i193': 444, 'i194': 392, 'i195': 453, 'i196': 572, 'i197': 885, 'i198': 704, 'i199': 704, 'i200': 133, 'i201': 973, 'i202': 989, 'i203': 897, 'i204': 91, 'i205': 138, 'i206': 886, 'i207': 494, 'i208': 649, 'i209': 385, 'i210': 731, 'i211': 706, 'i212': 474, 'i213': 518, 'i214': 469, 'i215': 233, 'i216': 810, 'i217': 1000, 'i218': 385, 'i219': 855, 'i220': 631, 'i221': 813, 'i222': 1, 'i223': 210, 'i224': 224, 'i225': 258, 'i226': 646, 'i227': 688, 'i228': 246, 'i229': 526, 'i230': 298, 'i231': 906, 'i232': 503, 'i233': 219, 'i234': 852, 'i235': 416, 'i236': 154, 'i237': 795, 'i238': 65, 'i239': 660, 'i240': 718, 'i241': 438, 'i242': 601, 'i243': 258, 'i244': 3, 'i245': 192, 'i246': 373, 'i247': 782, 'i248': 485, 'i249': 313, 'i250': 996, 'i251': 36, 'i252': 893, 'i253': 497, 'i254': 280, 'i255': 618, 'i256': 872, 'i257': 132, 'i258': 323, 'i259': 516, 'i260': 972, 'i261': 941, 'i262': 219, 'i263': 435, 'i264': 341, 'i265': 26, 'i266': 841, 'i267': 801, 'i268': 10, 'i269': 814, 'i270': 465, 'i271': 291, 'i272': 470, 'i273': 295, 'i274': 924, 'i275': 702, 'i276': 122, 'i277': 77, 'i278': 466, 'i279': 219, 'i280': 660, 'i281': 11, 'i282': 388, 'i283': 679, 'i284': 332, 'i285': 311, 'i286': 50, 'i287': 592, 'i288': 879, 'i289': 656, 'i290': 259, 'i291': 198, 'i292': 366, 'i293': 680, 'i294': 383, 'i295': 14, 'i296': 413, 'i297': 994, 'i298': 855, 'i299': 535, 'i300': 847, 'i301': 681, 'i302': 29, 'i303': 590, 'i304': 62, 'i305': 823, 'i306': 629, 'i307': 167, 'i308': 364, 'i309': 94, 'i310': 139, 'i311': 70, 'i312': 886, 'i313': 208, 'i314': 330, 'i315': 149, 'i316': 766, 'i317': 865, 'i318': 422, 'i319': 644, 'i320': 118, 'i321': 108, 'i322': 465, 'i323': 877, 'i324': 624, 'i325': 599, 'i326': 685, 'i327': 106, 'i328': 277, 'i329': 125, 'i330': 356, 'i331': 614, 'i332': 784, 'i333': 848, 'i334': 641, 'i335': 926, 'i336': 766, 'i337': 537, 'i338': 550, 'i339': 138, 'i340': 189, 'i341': 339, 'i342': 6, 'i343': 485, 'i344': 229, 'i345': 922, 'i346': 484, 'i347': 783, 'i348': 257, 'i349': 717, 'i350': 650, 'i351': 492, 'i352': 92, 'i353': 752, 'i354': 114, 'i355': 654, 'i356': 713, 'i357': 561, 'i358': 308, 'i359': 590, 'i360': 196, 'i361': 940, 'i362': 359, 'i363': 724, 'i364': 580, 'i365': 239, 'i366': 79, 'i367': 509, 'i368': 515, 'i369': 616, 'i370': 179, 'i371': 742, 'i372': 42, 'i373': 429, 'i374': 389, 'i375': 184, 'i376': 910, 'i377': 953, 'i378': 266, 'i379': 160, 'i380': 377, 'i381': 128, 'i382': 179, 'i383': 212, 'i384': 982, 'i385': 153, 'i386': 324, 'i387': 184, 'i388': 428, 'i389': 399, 'i390': 312, 'i391': 182, 'i392': 505, 'i393': 235, 'i394': 214, 'i395': 785, 'i396': 309, 'i397': 843, 'i398': 663, 'i399': 4, 'i400': 930, 'i401': 191, 'i402': 138, 'i403': 455, 'i404': 22, 'i405': 678, 'i406': 537, 'i407': 122, 'i408': 343, 'i409': 532, 'i410': 618, 'i411': 152, 'i412': 705, 'i413': 722, 'i414': 299, 'i415': 529, 'i416': 311, 'i417': 93, 'i418': 897, 'i419': 181, 'i420': 727, 'i421': 853, 'i422': 354, 'i423': 317, 'i424': 854, 'i425': 754, 'i426': 132, 'i427': 936, 'i428': 396, 'i429': 745, 'i430': 452, 'i431': 747, 'i432': 337, 'i433': 882, 'i434': 804, 'i435': 944, 'i436': 810, 'i437': 919, 'i438': 367, 'i439': 584, 'i440': 263, 'i441': 536, 'i442': 775, 'i443': 224, 'i444': 462, 'i445': 576, 'i446': 753, 'i447': 805, 'i448': 360, 'i449': 415, 'i450': 492, 'i451': 688, 'i452': 411, 'i453': 116, 'i454': 370, 'i455': 240, 'i456': 570, 'i457': 620, 'i458': 921, 'i459': 985, 'i460': 156, 'i461': 824, 'i462': 386, 'i463': 199, 'i464': 795, 'i465': 292, 'i466': 810, 'i467': 111, 'i468': 369, 'i469': 23, 'i470': 784, 'i471': 89, 'i472': 37, 'i473': 139, 'i474': 275, 'i475': 226, 'i476': 857, 'i477': 197, 'i478': 300, 'i479': 736, 'i480': 828, 'i481': 183, 'i482': 981, 'i483': 915, 'i484': 115, 'i485': 52, 'i486': 339, 'i487': 967, 'i488': 671, 'i489': 714, 'i490': 744, 'i491': 257, 'i492': 384, 'i493': 350, 'i494': 546, 'i495': 38, 'i496': 774, 'i497': 663, 'i498': 188, 'i499': 853, 'i500': 434, 'i501': 762, 'i502': 414, 'i503': 190, 'i504': 136, 'i505': 528, 'i506': 406, 'i507': 829, 'i508': 185, 'i509': 32, 'i510': 105, 'i511': 213, 'i512': 808, 'i513': 186, 'i514': 526, 'i515': 471, 'i516': 960, 'i517': 586, 'i518': 773, 'i519': 742, 'i520': 584, 'i521': 740, 'i522': 272, 'i523': 817, 'i524': 224, 'i525': 781, 'i526': 11, 'i527': 300, 'i528': 1000, 'i529': 291, 'i530': 492, 'i531': 905, 'i532': 797, 'i533': 329, 'i534': 497, 'i535': 429, 'i536': 436, 'i537': 744, 'i538': 867, 'i539': 689, 'i540': 220, 'i541': 712, 'i542': 635, 'i543': 453, 'i544': 807, 'i545': 197, 'i546': 642, 'i547': 525, 'i548': 52, 'i549': 567, 'i550': 119, 'i551': 507, 'i552': 246, 'i553': 978, 'i554': 817, 'i555': 75, 'i556': 825, 'i557': 150, 'i558': 249, 'i559': 774, 'i560': 147, 'i561': 253, 'i562': 791, 'i563': 407, 'i564': 378, 'i565': 953, 'i566': 969, 'i567': 631, 'i568': 278, 'i569': 398, 'i570': 287, 'i571': 553, 'i572': 964, 'i573': 197, 'i574': 820, 'i575': 977, 'i576': 560, 'i577': 801, 'i578': 532, 'i579': 516, 'i580': 932, 'i581': 595, 'i582': 388, 'i583': 763, 'i584': 924, 'i585': 406, 'i586': 999, 'i587': 30, 'i588': 248, 'i589': 741, 'i590': 605, 'i591': 82, 'i592': 911, 'i593': 894, 'i594': 296, 'i595': 453, 'i596': 269, 'i597': 142, 'i598': 332, 'i599': 146, 'i600': 797, 'i601': 429, 'i602': 695, 'i603': 342, 'i604': 958, 'i605': 288, 'i606': 264, 'i607': 393, 'i608': 973, 'i609': 952, 'i610': 491, 'i611': 654, 'i612': 961, 'i613': 383, 'i614': 903, 'i615': 660, 'i616': 322, 'i617': 248, 'i618': 595, 'i619': 764, 'i620': 510, 'i621': 786, 'i622': 709, 'i623': 431, 'i624': 109, 'i625': 248, 'i626': 92, 'i627': 14, 'i628': 580, 'i629': 431, 'i630': 493, 'i631': 355, 'i632': 308, 'i633': 885, 'i634': 917, 'i635': 368, 'i636': 848, 'i637': 578, 'i638': 810, 'i639': 660, 'i640': 709, 'i641': 598, 'i642': 906, 'i643': 574, 'i644': 907, 'i645': 66, 'i646': 173, 'i647': 288, 'i648': 564, 'i649': 674, 'i650': 11, 'i651': 330, 'i652': 832, 'i653': 744, 'i654': 321, 'i655': 138, 'i656': 973, 'i657': 181, 'i658': 40, 'i659': 522, 'i660': 551, 'i661': 494, 'i662': 132, 'i663': 504, 'i664': 768, 'i665': 953, 'i666': 770, 'i667': 65, 'i668': 387, 'i669': 535, 'i670': 535, 'i671': 104, 'i672': 457, 'i673': 841, 'i674': 347, 'i675': 367, 'i676': 119, 'i677': 75, 'i678': 285, 'i679': 196, 'i680': 469, 'i681': 689, 'i682': 840, 'i683': 479, 'i684': 653, 'i685': 87, 'i686': 339, 'i687': 808, 'i688': 266, 'i689': 796, 'i690': 605, 'i691': 180, 'i692': 151, 'i693': 89, 'i694': 205, 'i695': 608, 'i696': 156, 'i697': 530, 'i698': 188, 'i699': 822, 'i700': 309}
bin_volume = {'b1': 5949, 'b2': 6839, 'b3': 3142, 'b4': 7125, 'b5': 4771, 'b6': 6067, 'b7': 4129, 'b8': 2663, 'b9': 5386, 'b10': 4411, 'b11': 4948, 'b12': 4993, 'b13': 5795, 'b14': 4461, 'b15': 4099, 'b16': 6648, 'b17': 3758, 'b18': 4767, 'b19': 3382, 'b20': 3088, 'b21': 7358, 'b22': 4690, 'b23': 6628, 'b24': 2224, 'b25': 7465, 'b26': 4492, 'b27': 4206, 'b28': 6568, 'b29': 6828, 'b30': 7463, 'b31': 7439, 'b32': 2022, 'b33': 2316, 'b34': 7918, 'b35': 3221, 'b36': 2669, 'b37': 6530, 'b38': 5957, 'b39': 7349, 'b40': 4082, 'b41': 2901, 'b42': 4043, 'b43': 5407, 'b44': 5837, 'b45': 5209, 'b46': 6529, 'b47': 3831, 'b48': 3754, 'b49': 2986, 'b50': 7418, 'b51': 7986, 'b52': 2985, 'b53': 4427, 'b54': 2549, 'b55': 4985, 'b56': 5448, 'b57': 4459, 'b58': 2437, 'b59': 4644, 'b60': 2222, 'b61': 6236, 'b62': 6124, 'b63': 3778, 'b64': 2101, 'b65': 6331, 'b66': 2227, 'b67': 7954, 'b68': 3371, 'b69': 3675, 'b70': 4267, 'b71': 2840, 'b72': 7332, 'b73': 6153, 'b74': 7637, 'b75': 5326, 'b76': 5278, 'b77': 5680, 'b78': 5591, 'b79': 6810, 'b80': 7773, 'b81': 5849, 'b82': 2529, 'b83': 5418, 'b84': 2986, 'b85': 6027, 'b86': 3455, 'b87': 7420, 'b88': 6440, 'b89': 7819, 'b90': 7522, 'b91': 5657, 'b92': 4207, 'b93': 5020, 'b94': 3276, 'b95': 2575, 'b96': 7675, 'b97': 4644, 'b98': 6228, 'b99': 6078, 'b100': 6230, 'b101': 2293, 'b102': 5888, 'b103': 4309, 'b104': 2154, 'b105': 3891, 'b106': 7951, 'b107': 4493, 'b108': 3079, 'b109': 6829, 'b110': 6001, 'b111': 3267, 'b112': 4992, 'b113': 6868, 'b114': 7505, 'b115': 7831, 'b116': 7521, 'b117': 3862, 'b118': 4871, 'b119': 5076, 'b120': 3425, 'b121': 4395, 'b122': 4080, 'b123': 5484, 'b124': 4836, 'b125': 6458, 'b126': 5801, 'b127': 4981, 'b128': 4581, 'b129': 2180, 'b130': 4640, 'b131': 2512, 'b132': 6889, 'b133': 7553, 'b134': 5117, 'b135': 6803, 'b136': 4858, 'b137': 2961, 'b138': 7859, 'b139': 3497, 'b140': 2922, 'b141': 4975, 'b142': 3407, 'b143': 6864, 'b144': 3168, 'b145': 5774, 'b146': 3162, 'b147': 6319, 'b148': 5811, 'b149': 4179, 'b150': 2721, 'b151': 3464, 'b152': 3767, 'b153': 3841, 'b154': 3848, 'b155': 5509, 'b156': 2447, 'b157': 6585, 'b158': 5349, 'b159': 7153, 'b160': 7059, 'b161': 6016, 'b162': 6323, 'b163': 7222, 'b164': 4914, 'b165': 5317, 'b166': 4802, 'b167': 4030, 'b168': 7551, 'b169': 4116, 'b170': 7631, 'b171': 7354, 'b172': 3096, 'b173': 6197, 'b174': 5363, 'b175': 3903, 'b176': 2151, 'b177': 4608, 'b178': 6274, 'b179': 3816, 'b180': 2099, 'b181': 7304, 'b182': 5655, 'b183': 2314, 'b184': 3823, 'b185': 6499, 'b186': 5191, 'b187': 6787, 'b188': 5703, 'b189': 4974, 'b190': 5400, 'b191': 5798, 'b192': 2534, 'b193': 6327, 'b194': 7060, 'b195': 6641, 'b196': 3375, 'b197': 6823, 'b198': 2259, 'b199': 7810, 'b200': 3914, 'b201': 5394, 'b202': 5086, 'b203': 5620, 'b204': 5010, 'b205': 2709, 'b206': 7735, 'b207': 2828, 'b208': 5398, 'b209': 2009, 'b210': 6961, 'b211': 3603, 'b212': 2337, 'b213': 5794, 'b214': 7530, 'b215': 6153, 'b216': 7374, 'b217': 6567, 'b218': 7429, 'b219': 5743, 'b220': 6748, 'b221': 7248, 'b222': 6323, 'b223': 7211, 'b224': 6121, 'b225': 4677, 'b226': 3952, 'b227': 2539, 'b228': 5591, 'b229': 7537, 'b230': 3024, 'b231': 3244, 'b232': 4153, 'b233': 4214, 'b234': 7244, 'b235': 6185, 'b236': 3815, 'b237': 5973, 'b238': 5934, 'b239': 7656, 'b240': 4857, 'b241': 3537, 'b242': 3423, 'b243': 7116, 'b244': 5583, 'b245': 4481, 'b246': 3129, 'b247': 4051, 'b248': 3694, 'b249': 2500, 'b250': 6810, 'b251': 3005, 'b252': 4793, 'b253': 2819, 'b254': 5920, 'b255': 7139, 'b256': 5856, 'b257': 6006, 'b258': 5312, 'b259': 2976, 'b260': 7721, 'b261': 2341, 'b262': 6875, 'b263': 4013, 'b264': 5334, 'b265': 4529, 'b266': 3251, 'b267': 4507, 'b268': 6715, 'b269': 6589, 'b270': 2382, 'b271': 7810, 'b272': 5426, 'b273': 6784, 'b274': 4531, 'b275': 6615, 'b276': 2992, 'b277': 4365, 'b278': 7787, 'b279': 4102, 'b280': 7301, 'b281': 6567, 'b282': 3914, 'b283': 3736, 'b284': 2804, 'b285': 4171, 'b286': 7875, 'b287': 3051, 'b288': 2008, 'b289': 3707, 'b290': 4920, 'b291': 2917, 'b292': 7198, 'b293': 5400, 'b294': 7689, 'b295': 5776, 'b296': 6305, 'b297': 2946, 'b298': 4865, 'b299': 3443, 'b300': 6444, 'b301': 7501, 'b302': 3536, 'b303': 2473, 'b304': 3280, 'b305': 5073, 'b306': 2031, 'b307': 2798, 'b308': 3860, 'b309': 3795, 'b310': 5484, 'b311': 2844, 'b312': 7899, 'b313': 5944, 'b314': 4123, 'b315': 5627, 'b316': 4303, 'b317': 3666, 'b318': 5109, 'b319': 6001, 'b320': 4895, 'b321': 6031, 'b322': 5316, 'b323': 3349, 'b324': 2235, 'b325': 7943, 'b326': 6198, 'b327': 4878, 'b328': 2912, 'b329': 4287, 'b330': 5430, 'b331': 5909, 'b332': 7344, 'b333': 6446, 'b334': 2050, 'b335': 6241, 'b336': 4597, 'b337': 6931, 'b338': 6727, 'b339': 4011, 'b340': 2476, 'b341': 2986, 'b342': 6966, 'b343': 5117, 'b344': 3944, 'b345': 6912, 'b346': 5317, 'b347': 5618, 'b348': 3276, 'b349': 5471, 'b350': 3882}

bin_cost = {'b1': 464, 'b2': 317, 'b3': 727, 'b4': 553, 'b5': 603, 'b6': 334, 'b7': 262, 'b8': 405, 'b9': 77, 'b10': 737, 'b11': 584, 'b12': 414, 'b13': 940, 'b14': 59, 'b15': 910, 'b16': 965, 'b17': 401, 'b18': 44, 'b19': 918, 'b20': 325, 'b21': 362, 'b22': 275, 'b23': 112, 'b24': 527, 'b25': 644, 'b26': 319, 'b27': 865, 'b28': 363, 'b29': 296, 'b30': 994, 'b31': 321, 'b32': 526, 'b33': 578, 'b34': 437, 'b35': 311, 'b36': 219, 'b37': 351, 'b38': 132, 'b39': 304, 'b40': 912, 'b41': 542, 'b42': 167, 'b43': 245, 'b44': 598, 'b45': 19, 'b46': 458, 'b47': 993, 'b48': 647, 'b49': 506, 'b50': 605, 'b51': 112, 'b52': 248, 'b53': 880, 'b54': 4, 'b55': 221, 'b56': 202, 'b57': 423, 'b58': 699, 'b59': 556, 'b60': 442, 'b61': 520, 'b62': 161, 'b63': 107, 'b64': 271, 'b65': 120, 'b66': 535, 'b67': 27, 'b68': 74, 'b69': 524, 'b70': 788, 'b71': 290, 'b72': 337, 'b73': 230, 'b74': 266, 'b75': 343, 'b76': 935, 'b77': 127, 'b78': 338, 'b79': 821, 'b80': 854, 'b81': 599, 'b82': 11, 'b83': 484, 'b84': 760, 'b85': 554, 'b86': 734, 'b87': 795, 'b88': 85, 'b89': 802, 'b90': 663, 'b91': 436, 'b92': 259, 'b93': 84, 'b94': 619, 'b95': 526, 'b96': 319, 'b97': 830, 'b98': 920, 'b99': 383, 'b100': 82, 'b101': 390, 'b102': 201, 'b103': 912, 'b104': 993, 'b105': 396, 'b106': 440, 'b107': 152, 'b108': 451, 'b109': 381, 'b110': 487, 'b111': 932, 'b112': 986, 'b113': 603, 'b114': 459, 'b115': 250, 'b116': 730, 'b117': 420, 'b118': 928, 'b119': 660, 'b120': 529, 'b121': 114, 'b122': 315, 'b123': 635, 'b124': 731, 'b125': 810, 'b126': 189, 'b127': 625, 'b128': 805, 'b129': 494, 'b130': 273, 'b131': 267, 'b132': 98, 'b133': 548, 'b134': 774, 'b135': 348, 'b136': 678, 'b137': 461, 'b138': 338, 'b139': 264, 'b140': 954, 'b141': 610, 'b142': 156, 'b143': 155, 'b144': 589, 'b145': 137, 'b146': 809, 'b147': 911, 'b148': 984, 'b149': 753, 'b150': 569, 'b151': 54, 'b152': 721, 'b153': 714, 'b154': 431, 'b155': 497, 'b156': 906, 'b157': 795, 'b158': 131, 'b159': 669, 'b160': 27, 'b161': 653, 'b162': 958, 'b163': 600, 'b164': 742, 'b165': 711, 'b166': 918, 'b167': 707, 'b168': 454, 'b169': 80, 'b170': 257, 'b171': 510, 'b172': 134, 'b173': 921, 'b174': 891, 'b175': 988, 'b176': 798, 'b177': 527, 'b178': 353, 'b179': 482, 'b180': 710, 'b181': 151, 'b182': 725, 'b183': 785, 'b184': 592, 'b185': 635, 'b186': 68, 'b187': 235, 'b188': 188, 'b189': 738, 'b190': 330, 'b191': 356, 'b192': 445, 'b193': 114, 'b194': 52, 'b195': 705, 'b196': 299, 'b197': 882, 'b198': 850, 'b199': 892, 'b200': 616, 'b201': 461, 'b202': 546, 'b203': 62, 'b204': 507, 'b205': 86, 'b206': 237, 'b207': 189, 'b208': 505, 'b209': 994, 'b210': 151, 'b211': 761, 'b212': 421, 'b213': 60, 'b214': 550, 'b215': 856, 'b216': 796, 'b217': 209, 'b218': 508, 'b219': 738, 'b220': 936, 'b221': 275, 'b222': 288, 'b223': 665, 'b224': 543, 'b225': 170, 'b226': 810, 'b227': 713, 'b228': 357, 'b229': 511, 'b230': 896, 'b231': 93, 'b232': 246, 'b233': 995, 'b234': 167, 'b235': 181, 'b236': 672, 'b237': 576, 'b238': 144, 'b239': 948, 'b240': 169, 'b241': 241, 'b242': 31, 'b243': 292, 'b244': 840, 'b245': 219, 'b246': 653, 'b247': 44, 'b248': 153, 'b249': 30, 'b250': 279, 'b251': 932, 'b252': 227, 'b253': 500, 'b254': 835, 'b255': 881, 'b256': 188, 'b257': 453, 'b258': 713, 'b259': 66, 'b260': 741, 'b261': 677, 'b262': 205, 'b263': 602, 'b264': 200, 'b265': 17, 'b266': 927, 'b267': 794, 'b268': 911, 'b269': 893, 'b270': 115, 'b271': 596, 'b272': 22, 'b273': 291, 'b274': 39, 'b275': 219, 'b276': 248, 'b277': 454, 'b278': 252, 'b279': 612, 'b280': 726, 'b281': 860, 'b282': 770, 'b283': 935, 'b284': 212, 'b285': 734, 'b286': 791, 'b287': 235, 'b288': 549, 'b289': 472, 'b290': 624, 'b291': 595, 'b292': 155, 'b293': 675, 'b294': 715, 'b295': 102, 'b296': 146, 'b297': 502, 'b298': 778, 'b299': 375, 'b300': 126, 'b301': 665, 'b302': 789, 'b303': 579, 'b304': 120, 'b305': 791, 'b306': 649, 'b307': 455, 'b308': 296, 'b309': 603, 'b310': 200, 'b311': 424, 'b312': 55, 'b313': 973, 'b314': 716, 'b315': 830, 'b316': 774, 'b317': 419, 'b318': 872, 'b319': 703, 'b320': 232, 'b321': 323, 'b322': 90, 'b323': 645, 'b324': 812, 'b325': 65, 'b326': 231, 'b327': 126, 'b328': 727, 'b329': 98, 'b330': 11, 'b331': 92, 'b332': 26, 'b333': 334, 'b334': 718, 'b335': 608, 'b336': 636, 'b337': 723, 'b338': 729, 'b339': 349, 'b340': 552, 'b341': 52, 'b342': 773, 'b343': 26, 'b344': 18, 'b345': 159, 'b346': 506, 'b347': 675, 'b348': 347, 'b349': 436, 'b350': 778}


#ordering items in I according to non-increasing order of volume
ordered_items = []
for key in item_volume:
    ordered_items.append(key)
item_sort(item_volume, ordered_items, 0, len(ordered_items)-1) 
print("ordered items: " + str(ordered_items))


#ordering bins in K according to non-decreasing order of the ratio c_j/V_j and non-decreasing order of V_j when the cost ratios c_j/V_j are equal
ordered_bins = []
cv_ratio = {} 
for key in bin_volume: 
    ordered_bins.append(key)
    cv_ratio[key] = bin_cost[key] / bin_volume[key]
    bin_sort_cv(cv_ratio, bin_volume, ordered_bins, 0, len(ordered_bins)-1)
print("cv ratio: " + str(cv_ratio))
print("ordered bins " + str(ordered_bins))


#defining filled bins set S
filled_bins = {}
filled_bin_volume = {}
ordered_filled_bins = []


#placing items in bins
for i in ordered_items: 
    print(ordered_filled_bins)

    #if S is empty, put the largest item i into the first bin in K that accomodates i
    if len(ordered_filled_bins) == 0: 
        for l in ordered_bins:
            print("i: " + str(i))
            print("l: " + str(l))
            if item_volume[i] > bin_volume[l]:
                print("item volume:  " + str(item_volume[i]))
                print("bin volume: " + str(bin_volume[l]))
                print("item " + str(i) + " of volume " + str(item_volume[i]) + " too large for bin " + str(l) + " with volume " + str(bin_volume[l]))
                continue 
            print("item volume:  " + str(item_volume[i]))
            print("bin volume: " + str(bin_volume[l]))
            print("item " + str(i) + " of volume " + str(item_volume[i]) + " fits in bin " + str(l) + " with volume " + str(bin_volume[l]))
            filled_bins[l] = [i]
            filled_bin_volume[l] = bin_volume[l] - item_volume[i]
            ordered_filled_bins.append(l)
            #ordering bins in S according to non-decreasing order of remaining volume and non-decreasing order of c_j/V_j when the remaining volumes are equal  
            bin_sort_volume2(cv_ratio, filled_bin_volume, ordered_filled_bins, 0, len(ordered_filled_bins) - 1)
            print("filled bins: " + str(filled_bins))
            print("ordered filled bins: " + str(ordered_filled_bins))
            print("filled bin volume: " + str(filled_bin_volume))
            break

    else: 
        #if S is not empty, and if i can be accomodated into a bin in S, then place it into the bin into the first bin in S that can accomodate i
        for b in ordered_filled_bins:
            print("i: " + str(i))
            print("b: " + str(b))
            print("item volume:  " + str(item_volume[i]))
            print("bin volume: " + str(filled_bin_volume[b]))
            if item_volume[i] <= filled_bin_volume[b]:
                print("item " + str(i) + " of volume " + str(item_volume[i]) + " fits in bin " + str(b) + " with remaining volume " + str(filled_bin_volume[b]))
                filled_bins[b].append(i)
                filled_bin_volume[b] = filled_bin_volume[b] - item_volume[i]
                #ordering bins in S according to non-decreasing order of remaining volume and non-decreasing order of c_j/V_j when the remaining volumes are equal
                bin_sort_volume2(cv_ratio, filled_bin_volume, ordered_filled_bins, 0, len(ordered_filled_bins) - 1)
                print("filled bins: " + str(filled_bins))
                print("ordered filled bins: " + str(ordered_filled_bins))
                print("filled bin volume: " + str(filled_bin_volume))
                break 

            #if S is not empty and if i cannot be accomodated into a bin in S, then place it into the first bin in K that can accommodate i
            if b == ordered_filled_bins[len(ordered_filled_bins)-1]:
                if item_volume[i] > filled_bin_volume[b]:
                    print("item " + str(i) + " of volume " + str(item_volume[i]) + " too large for bin " + str(b) + " with remaining volume " + str(filled_bin_volume[b]))
                    for j in ordered_bins:
                        print("i: " + str(i))
                        print("j: " + str(j))
                        print("item volume " + str(item_volume[i]))
                        print("new bin volume " + str(bin_volume[j]))
                        if j in filled_bins: 
                            print(str(j) + " is in filled_bins")
                            continue
                        if item_volume[i] > bin_volume[j]: 
                            print("item " + str(i) + " of volume " + str(item_volume[i]) + " too large for new bin " + str(j) + " with volume " + str(bin_volume[j]))
                            continue
                        print("item " + str(i) + " of volume " + str(item_volume[i]) + " fits in new bin " + str(j) + " with volume " + str(bin_volume[j]))
                        filled_bins[j] = [i]
                        filled_bin_volume[j] = bin_volume[j] - item_volume[i]
                        ordered_filled_bins.append(j)
                        #ordering bins in S according to non-decreasing order of remaining volume and non-decreasing order of c_j/V_j when the remaining volumes are equal
                        bin_sort_volume2(cv_ratio, filled_bin_volume, ordered_filled_bins, 0, len(ordered_filled_bins) - 1) 
                        print("filled bins: " + str(filled_bins))
                        print("ordered filled bins: " + str(ordered_filled_bins))
                        print("filled bin volume: " + str(filled_bin_volume))
                        break
                    break
print(filled_bins)
cost = 0
for b in filled_bins:
    cost+=bin_cost[b]
print("cost after filling bins: " + str(cost))


#defining unfilled bin set K\S
unfilled_bins = [] 
for j in ordered_bins: 
    if j not in ordered_filled_bins: 
        unfilled_bins.append(j)

print(item_volume)
print(bin_volume)
print(bin_cost)


print(filled_bins)
print(filled_bin_volume)
for b in filled_bins: 
    if filled_bin_volume[b] > 0: 
        print("bin with extra space: " + str(b))

print("original cost: " + str(cost))

#ordering bins in K\S according to non-decreasing order of cost and non-increasing order of volume when costs are equal  
bin_sort_cost(bin_cost, bin_volume, unfilled_bins, 0, len(unfilled_bins) -1)
print(unfilled_bins)
print(ordered_filled_bins)
for n in range(len(ordered_filled_bins)):
    #print(n)
    b = ordered_filled_bins[n]
    #print(b)
    v_b = 0
    for i in filled_bins[b]:
        v_b += item_volume[i]
    for k in unfilled_bins:
        if (bin_volume[k] >= v_b) and (bin_cost[k] < bin_cost[b]):
            print("k: " + str(k) + " volume: " + str(bin_volume[k]))
            print( "bin: " + str(b) + " item volume: " + str(v_b))
            print( "k: " + str(k) + " bin cost: " + str(bin_cost[k]))
            print( "b: " + str(b) + " bin cost: " + str(bin_cost[b]))
            filled_bins[k] = filled_bins[b]
            filled_bin_volume[k] = bin_volume[k] - v_b
            del filled_bins[b]
            del filled_bin_volume[b]
            unfilled_bins.append(b)
            unfilled_bins.remove(k)
            ordered_filled_bins[n] = k
            bin_sort_cost(bin_cost, bin_volume, unfilled_bins, 0, len(unfilled_bins) -1)
            break



cost = 0
for b in filled_bins: 
    cost += bin_cost[b]
print("final cost: " + str(cost))

for n in range(len(ordered_filled_bins)):
    b = ordered_filled_bins[n]
    v_b = 0
    for i in filled_bins[b]:
        v_b += item_volume[i]
    for k in unfilled_bins:
        if (bin_volume[k] >= v_b) and (bin_cost[k] < bin_cost[b]):
            print("k: " + str(k) + " volume: " + str(bin_volume[k]))
            print( "bin: " + str(b) + " item volume: " + str(v_b))
            print( "k: " + str(k) + " bin cost: " + str(bin_cost[k]))
            print( "b: " + str(b) + " bin cost: " + str(bin_cost[b]))
            filled_bins[k] = filled_bins[b]
            filled_bin_volume[k] = bin_volume[k] - v_b
            del filled_bins[b]
            del filled_bin_volume[b]
            unfilled_bins.append(b)
            unfilled_bins.remove(k)
            ordered_filled_bins[n] = k
            bin_sort_cost(bin_cost, bin_volume, unfilled_bins, 0, len(unfilled_bins) -1)
            break 

for i in item_volume: 
    for b in ordered_filled_bins:
        if i in filled_bins[b]: 
            break
        if b == ordered_filled_bins[len(ordered_filled_bins)-1]: 
            if i not in filled_bins[b]: 
                print(i)

cost = 0
for b in filled_bins:
    cost += bin_cost[b]
print("final cost: " + str(cost))

for n in range(len(ordered_filled_bins)):
    b = ordered_filled_bins[n]
    v_b = 0
    for i in filled_bins[b]:
        v_b += item_volume[i]
    for k in unfilled_bins:
        if (bin_volume[k] >= v_b) and (bin_cost[k] < bin_cost[b]):
            print("k: " + str(k) + " volume: " + str(bin_volume[k]))
            print( "bin: " + str(b) + " item volume: " + str(v_b))
            print( "k: " + str(k) + " bin cost: " + str(bin_cost[k]))
            print( "b: " + str(b) + " bin cost: " + str(bin_cost[b]))
            filled_bins[k] = filled_bins[b]
            filled_bin_volume[k] = bin_volume[k] - v_b
            del filled_bins[b]
            del filled_bin_volume[b]
            unfilled_bins.append(b)
            unfilled_bins.remove(k)
            ordered_filled_bins[n] = k
            bin_sort_cost(bin_cost, bin_volume, unfilled_bins, 0, len(unfilled_bins) -1)
            break

cost = 0
for b in filled_bins:
    cost += bin_cost[b]
print("final cost: " + str(cost))

print(filled_bins)
print(ordered_filled_bins)

for b in ordered_filled_bins: 
    print(b + ": " + str(filled_bins[b]))

#print(cv_ratio)
item_sort(item_volume, ordered_items, 0, len(ordered_items)-1)
#print("ordered items: " +str(ordered_items))

bin_sort_cv(cv_ratio, bin_volume, ordered_bins, 0, len(ordered_bins)-1)
print("ordered bins by cv" +str(ordered_bins))
#for b in ordered_bins:
#    print(b)
#    print(cv_ratio[b])
#    print(bin_volume[b])
print(cv_ratio) 
print(bin_volume)

bin_sort_volume(cv_ratio, bin_volume, ordered_bins, 0, len(ordered_bins)-1)
#print("ordered bins by volume: " +str(ordered_bins))
bin_sort_volume2(cv_ratio, bin_volume, ordered_bins, 0, len(ordered_bins)-1)
#print("ordered bins by volume 2: " + str(ordered_bins))
bin_sort_cost(bin_cost, bin_volume, ordered_bins, 0, len(ordered_bins)-1)
#print("ordered bins by cost 1: " + str(ordered_bins))
bin_sort_cost2(bin_cost, bin_volume, ordered_bins, 0, len(ordered_bins) -1)
#print("ordered bins by cost 2: " +str(ordered_bins))

print(ordered_items)
